!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("d3")):"function"==typeof define&&define.amd?define(["exports","d3"],i):i((t="undefined"!=typeof globalThis?globalThis:t||self).BgcViewer={},t.d3)}(this,function(t,i){"use strict";function a(t){var i=Object.create(null);return t&&Object.keys(t).forEach(function(a){if("default"!==a){var n=Object.getOwnPropertyDescriptor(t,a);Object.defineProperty(i,a,n.get?n:{enumerable:!0,get:function(){return t[a]}})}}),i.default=t,Object.freeze(i)}var n=a(i);t.RegionViewer=class{constructor(t){this.data={tracks:[],annotations:[]},this.config={container:t.container,width:t.width||800,height:t.height||300,margin:t.margin||{top:20,right:30,bottom:20,left:60},rowHeight:t.rowHeight||30,domain:t.domain||[0,100],zoomExtent:t.zoomExtent||[.5,20],onAnnotationClick:t.onAnnotationClick||(()=>{}),onAnnotationHover:t.onAnnotationHover||(()=>{})},this.originalLeftMargin=this.config.margin.left,this.currentTransform=n.zoomIdentity,this.initialize()}initialize(){const t="string"==typeof this.config.container?document.querySelector(this.config.container):this.config.container;if(!t)throw new Error("Container element not found");const i=document.body||document.documentElement;this.tooltip=n.select(i).append("div").attr("class","region-viewer-tooltip").style("position","absolute").style("background","white").style("border","1px solid #ccc").style("padding","4px 8px").style("font-size","12px").style("pointer-events","none").style("display","none").style("z-index","1000"),this.svg=n.select(t).append("svg").attr("width",this.config.width).attr("height",this.config.height),this.chart=this.svg.append("g").attr("transform",`translate(${this.config.margin.left},${this.config.margin.top})`);const a=this.config.width-this.config.margin.left-this.config.margin.right;this.clipId=`clip-${Math.random().toString(36).substring(2,11)}`,this.svg.append("defs").append("clipPath").attr("id",this.clipId).append("rect").attr("x",0).attr("y",0).attr("width",a).attr("height","100%"),this.xAxisGroup=this.chart.append("g").attr("class","x-axis"),this.clippedChart=this.chart.append("g").attr("clip-path",`url(#${this.clipId})`),this.x=n.scaleLinear().domain(this.config.domain).range([0,this.config.width-this.config.margin.left-this.config.margin.right]),this.initializeZoom()}initializeZoom(){const t=this.config.width-this.config.margin.left-this.config.margin.right,i=this.config.height-this.config.margin.top-this.config.margin.bottom;this.zoom=n.zoom().scaleExtent(this.config.zoomExtent).translateExtent([[0,0],[t,i]]).extent([[0,0],[t,i]]).on("zoom",t=>{this.currentTransform=t.transform,this.drawAnnotations()}),this.svg.call(this.zoom),this.clippedChart.insert("rect",":first-child").attr("class","chart-background").attr("width",t).attr("height",i).style("fill","transparent").style("pointer-events","all").style("cursor","grab").on("mousedown",function(){n.select(this).style("cursor","grabbing")}).on("mouseup",function(){n.select(this).style("cursor","grab")})}updateHeight(){const t=this.data.tracks.length*this.config.rowHeight+this.config.margin.top+this.config.margin.bottom;this.config.height=t,this.svg.attr("height",t);const i=this.data.tracks.length*this.config.rowHeight;this.xAxisGroup.attr("transform",`translate(0, ${i})`),this.svg.select("clipPath rect").attr("height",i),this.clippedChart.select(".chart-background").attr("height",i)}createTrackGroups(){this.trackGroups=this.clippedChart.selectAll(".track").data(this.data.tracks,t=>t.id).join("g").attr("class","track").attr("transform",(t,i)=>`translate(0, ${i*this.config.rowHeight})`);this.chart.selectAll(".track-label-group").data(this.data.tracks,t=>t.id).join("g").attr("class","track-label-group").attr("transform",(t,i)=>`translate(0, ${i*this.config.rowHeight})`).selectAll(".track-label").data(t=>[t]).join("text").attr("class","track-label").attr("x",-10).attr("y",this.config.rowHeight/2).attr("dy","0.35em").attr("text-anchor","end").style("font","12px sans-serif").text(t=>t.label),this.trackGroups.selectAll(".annotations").data(t=>[t]).join("g").attr("class","annotations")}drawAnnotations(){const t=this.currentTransform.rescaleX(this.x);this.xAxisGroup.call(n.axisBottom(t)),this.trackGroups&&this.trackGroups.each((i,a,e)=>{const s=n.select(e[a]).select(".annotations"),r=this.data.annotations.filter(t=>t.trackId===i.id);s.selectAll("*").remove(),r.forEach(a=>{this.renderAnnotation(s,a,t,i)})})}renderAnnotation(t,i,a,n){const e=a(i.start),s=Math.max(1,a(i.end)-a(i.start)),r=this.config.rowHeight-10;let o;switch(i.type){case"arrow":o=this.renderArrow(t,e,5,s,r,i.direction);break;case"marker":o=this.renderMarker(t,e,5,s,r);break;default:o=this.renderBox(t,e,5,s,r)}o.attr("class",`annotation ${i.class}`).style("cursor","pointer").style("pointer-events","all").on("mouseover",t=>{o.classed("hovered",!0),this.showTooltip(t,i,n)}).on("mouseout",()=>{o.classed("hovered",!1),this.hideTooltip()}).on("click",()=>{const t={start:i.start,end:i.end,label:i.label,id:i.id},a={track:n.label,annotations:[],id:n.id};this.config.onAnnotationClick(t,a)})}renderBox(t,i,a,n,e){return t.append("rect").attr("x",i).attr("y",a).attr("width",n).attr("height",e).attr("rx",2).attr("ry",2)}renderArrow(t,i,a,n,e,s){const r=Math.min(.2*n,.5*e,8),o=n-("none"!==s?r:0);let h;if("right"===s)h=`\n        M ${i} ${a}\n        L ${i+o} ${a}\n        L ${i+n} ${a+.5*e}\n        L ${i+o} ${a+e}\n        L ${i} ${a+e}\n        Z\n      `;else if("left"===s)h=`\n        M ${i} ${a+.5*e}\n        L ${i+r} ${a}\n        L ${i+n} ${a}\n        L ${i+n} ${a+e}\n        L ${i+r} ${a+e}\n        Z\n      `;else{const t=Math.min(.1*n,.3*e,4);h=`\n        M ${i+t} ${a}\n        L ${i+n-t} ${a}\n        L ${i+n} ${a+.5*e}\n        L ${i+n-t} ${a+e}\n        L ${i+t} ${a+e}\n        L ${i} ${a+.5*e}\n        Z\n      `}return t.append("path").attr("d",h)}renderMarker(t,i,a,n,e){const s=i+n/2,r=a+e/2,o=Math.min(n,e)/2;return t.append("circle").attr("cx",s).attr("cy",r).attr("r",o).attr("class","annotation-marker")}showTooltip(t,i,a){this.tooltip.style("display","block").style("left",`${t.pageX+10}px`).style("top",t.pageY-10+"px").html(`<strong>${i.label}</strong><br/>Start: ${i.start}<br/>End: ${i.end}<br/>Track: ${a.label}`);const n={start:i.start,end:i.end,label:i.label,id:i.id},e={track:a.label,annotations:[],id:a.id};this.config.onAnnotationHover(n,e,t)}hideTooltip(){this.tooltip.style("display","none")}calculateRequiredLeftMargin(){if(0===this.data.tracks.length)return this.originalLeftMargin;const t=this.svg.append("text").style("font","12px sans-serif").style("visibility","hidden");let i=0;this.data.tracks.forEach(a=>{t.text(a.label);const n=t.node();if(n&&"function"==typeof n.getBBox)try{const t=n.getBBox();i=Math.max(i,t.width)}catch(t){i=Math.max(i,8*a.label.length)}else i=Math.max(i,8*a.label.length)}),t.remove();return Math.max(this.originalLeftMargin,i+20)}updateMarginAndLayout(){const t=this.calculateRequiredLeftMargin();if(Math.abs(this.config.margin.left-t)>5){this.config.margin.left=t,this.chart.attr("transform",`translate(${this.config.margin.left},${this.config.margin.top})`),this.x.range([0,this.config.width-this.config.margin.left-this.config.margin.right]);const i=this.config.width-this.config.margin.left-this.config.margin.right;this.svg.select("clipPath rect").attr("width",i),this.clippedChart.select(".chart-background").attr("width",i)}}setData(t){this.data=t,this.updateMarginAndLayout(),this.updateHeight(),this.createTrackGroups(),this.drawAnnotations()}setTrackData(t){const i=t.map(t=>({id:t.id||t.track,label:t.track})),a=t.flatMap(t=>t.annotations.map(i=>({id:i.id||`${t.id||t.track}-${i.label}`,trackId:t.id||t.track,type:"box",class:"annotation-default",label:i.label,start:i.start,end:i.end,direction:"none"})));this.setData({tracks:i,annotations:a})}addTrack(t,i){this.data.tracks.push(t),i&&this.data.annotations.push(...i),this.updateMarginAndLayout(),this.updateHeight(),this.createTrackGroups(),this.drawAnnotations()}addTrackLegacy(t){const i={id:t.id||t.track,label:t.track},a=t.annotations.map(i=>({id:i.id||`${t.id||t.track}-${i.label}`,trackId:t.id||t.track,type:"box",class:"annotation-default",label:i.label,start:i.start,end:i.end,direction:"none"}));this.addTrack(i,a)}removeTrack(t){this.data.tracks=this.data.tracks.filter(i=>i.id!==t),this.data.annotations=this.data.annotations.filter(i=>i.trackId!==t),this.updateMarginAndLayout(),this.updateHeight(),this.createTrackGroups(),this.drawAnnotations()}addAnnotation(t){this.data.annotations.push(t),this.drawAnnotations()}removeAnnotation(t){this.data.annotations=this.data.annotations.filter(i=>i.id!==t),this.drawAnnotations()}updateDomain(t){this.config.domain=t,this.x.domain(t),this.drawAnnotations()}zoomTo(t,i){const a=(this.config.width-this.config.margin.left-this.config.margin.right)/(this.x(i)-this.x(t)),e=-this.x(t)*a,s=n.zoomIdentity.translate(e,0).scale(a);this.svg.transition().duration(750).call(this.zoom.transform,s)}resetZoom(){this.svg.transition().duration(750).call(this.zoom.transform,n.zoomIdentity)}destroy(){this.tooltip.remove(),this.svg.remove()}getConfig(){return{...this.config}}getData(){return{tracks:[...this.data.tracks],annotations:[...this.data.annotations]}}getTrackData(){return this.data.tracks.map(t=>{const i=this.data.annotations.filter(i=>i.trackId===t.id).map(t=>({start:t.start,end:t.end,label:t.label,id:t.id}));return{track:t.label,annotations:i,id:t.id}})}}});
//# sourceMappingURL=index.umd.js.map
